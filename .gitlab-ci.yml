image: dsteinhoefel/islearn:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

test:
  before_script:
    - pip install --prefix=$(python3 -m site --user-base) --no-cache-dir --upgrade pip
    - pip install --prefix=$(python3 -m site --user-base) --no-cache-dir --upgrade wheel
    - pip uninstall -y isla
    - cat requirements.txt | grep -v z3 > requirements_noz3.txt
    - pip install --prefix=$(python3 -m site --user-base) --no-cache-dir --no-deps -r requirements_noz3.txt
  script:
    - pip install --no-cache-dir --prefix=$(python3 -m site --user-base) --no-deps -e .[tests]
    - python3 -m pytest -n 16 --html=report.html --self-contained-html

build:
  before_script:
    - pip install --prefix=$(python3 -m site --user-base) --no-cache-dir --upgrade pip
    - pip install --prefix=$(python3 -m site --user-base) --no-cache-dir --upgrade wheel
    - pip uninstall -y isla
    - cat requirements.txt | grep -v z3 > requirements_noz3.txt
    - pip install --prefix=$(python3 -m site --user-base) --no-cache-dir --no-deps -r requirements_noz3.txt
  script:
    - python3 -m build
  artifacts:
    paths:
      - dist/*.whl

docker-build-main:
  image: docker:latest
  tags:
    - vps
  stage: build
  # before_script:
    # - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker info
    - echo "$CI_REGISTRY_PASSWORD" 
    - echo "$CI_REGISTRY_USER" 
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  when: manual
