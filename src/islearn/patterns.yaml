- name: Def-Use
  constraint: |
      forall <?NONTERMINAL> use_ctx in start:
        forall <?NONTERMINAL> use in use_ctx:
          exists <?NONTERMINAL> def_ctx in start:
            exists <?NONTERMINAL> def in def_ctx:
              (before(def_ctx, use_ctx) and
              (= def use))

- name: Equal Count
  constraint: |
      exists int num:
        forall <?NONTERMINAL> elem in start:
          ((>= (str.to.int num) 1) and
          count(elem, <?NONTERMINAL>, num))

- name: String Existence
  constraint: |
      forall <?NONTERMINAL> container in start:
        exists <?NONTERMINAL> elem in container:
          (= elem <?STRING>)