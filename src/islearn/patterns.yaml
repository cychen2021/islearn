- name: Def-Use (C)
  group: Def-Use
  constraint: |
    forall <?NONTERMINAL> use_ctx in start:
      forall <?NONTERMINAL> use in use_ctx:
        exists <?NONTERMINAL> def_ctx="{<?MATCHEXPR(def)>}" in start:
          (before(def_ctx, use_ctx) and
          (= use def))

- name: Def-Use (reST)
  group: Def-Use
  constraint: |
      forall <?NONTERMINAL> use_ctx="{<?MATCHEXPR(use)>}" in start:
        exists <?NONTERMINAL> def_ctx="{<?MATCHEXPR(def)>}" in start:
          (different_position(use_ctx, def_ctx) and
          (= use def))

- name: Def-Use (XML)
  group: Def-Use
  constraint: |
      forall <?NONTERMINAL> attribute in start:
        forall <?NONTERMINAL> prefix_id="{<?MATCHEXPR(prefix_use)>}" in attribute:
          ((= prefix_use <?STRING>) or
            exists <?NONTERMINAL> outer_tag="{<?MATCHEXPR(cont_attribute, contained_tree)>}" in start:
              (inside(attribute, contained_tree) and 
               exists <?NONTERMINAL> def_attribute="{<?MATCHEXPR(prefix_def)>}" in cont_attribute:
                 (= prefix_use prefix_def)))

- name: Balance
  constraint: |
    forall <?NONTERMINAL> container="{<?MATCHEXPR(opid, clid)>}" in start:
      (= opid clid)

- name: Equal Count
  constraint: |
    exists int num:
      forall <?NONTERMINAL> elem in start:
        ((>= (str.to.int num) 1) and
        count(elem, <?NONTERMINAL>, num))

- name: String Existence
  group: Existential
  constraint: |
    forall <?NONTERMINAL> container in start:
      exists <?NONTERMINAL> elem in container:
        (= elem <?STRING>)

- name: Existence String Fixed Length
  group: Existential
  constraint: |
    forall <?NONTERMINAL> container in start:
      exists <?NONTERMINAL> elem in container:
        (= (str.len elem) (str.to.int <?STRING>))

- name: Existence String Max Length
  group: Existential
  constraint: |
    forall <?NONTERMINAL> container in start:
      exists <?NONTERMINAL> elem in container:
        (<= (str.len elem) (str.to.int <?STRING>))

- name: Existence Numeric String Smaller Than
  group: Existential
  constraint: |
    forall <?NONTERMINAL> container in start:
      exists <?NONTERMINAL> elem in container:
        (<= (str.to.int elem) (str.to.int <?STRING>))

- name: Existence Numeric String Larger Than
  group: Existential
  constraint: |
    forall <?NONTERMINAL> container in start:
      exists <?NONTERMINAL> elem in container:
        (>= (str.to.int elem) (str.to.int <?STRING>))

- name: Existence Strings Relative Order
  group: Existential
  constraint: |
    forall <?NONTERMINAL> container in start:
      exists <?NONTERMINAL> occ_1 in container:
        exists <?NONTERMINAL> occ_2 in container:
          (before(occ_1, occ_2) and
           (= occ_2 <?STRING>) and
           (= occ_1 <?STRING>))
